apply plugin: 'maven-publish'
apply plugin: 'signing'

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.source
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompileProvider.get().classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task emptyJar(type: Jar) {
    archiveAppendix.set("empty")
}

artifacts {
    archives androidSourcesJar
}

group = publishGroupId
version = publishVersion

ext.signing = [
        "keyId": "",
        "password": "",
        "secretKeyRingFile": "",
]

ext.ossrhUsername = ""
ext.ossrhPassword = ""

File secretPropsFile = project.rootProject.file('local.properties')

// Get signing and ossrh parameters from local.properties, or env as fallback
if (secretPropsFile.exists()) {
    println "Found secret props file, loading props"
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        ext[name] = value
    }
} else {
    println "No props file, loading env vars"
    ext["signing.keyId"] = System.getenv('SIGNING_KEY_ID')
    ext["signing.password"] = System.getenv('SIGNING_PASSWORD')
    ext["signing.secretKeyringFile"] = System.getenv('SIGNING_SECRET_KEY_RING_FILE')
    ext["ossrhUsername"] = System.getenv('OSSRH_USERNAME')
    ext["ossrhPassword"] = System.getenv('OSSRH_PASSWORD')
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId publishGroupId
                artifactId publishArtifactId
                version publishVersion

                artifact androidSourcesJar

                // POM metadata
                pom {
                    name = publishArtifactId
                    description = 'SDK for integrating WristCoin payments into Point of Sale systems'
                    url = 'https://github.com/WristCoin/POS-Integration-SDK-Android'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'WristCoin'
                            name = 'WristCoin'
                            email = ''
                        }
                    }
                    scm {
                        connection = 'scm:git:github.com/WristCoin/POS-Integration-SDK-Android.git'
                        developerConnection = 'scm:git:ssh://github.com/WristCoin/POS-Integration-SDK-Android.git'
                        url = 'https://github.com/WristCoin/POS-Integration-SDK-Android/tree/master'
                    }
                }
            }
        }
        repositories {
            maven {
                // This is an arbitrary name, used to determine the gradle task name
                name = "mavenCentral"

                def releasesRepoUrl = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
                url = releasesRepoUrl

                // The username and password fetched earlier
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }

    signing {
        sign publishing.publications
    }
}
